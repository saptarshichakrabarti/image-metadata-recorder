# This section tells pip how to build your project.
[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

# This section contains all the metadata about your package.
[project]
name = "image-metadata-recorder"
version = "1.3.0"
description = "A tool to extract, analyze, and report on metadata from TIFF, QPTIFF, and CZI files."
authors = [
    { name="Saptarshi Chakrabarti", email="saptarshi.chakrabarti@kuleuven.be" },
]
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Utilities",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Healthcare Industry",
]
dependencies = [
    "tifffile>=2023.0.0",      # For TIFF/QPTIFF processing
    "aicspylibczi>=3.0.0",     # For CZI file support
    "xmltodict>=0.13.0",       # For CZI XML parsing
]

# Project URLs
[project.urls]
Homepage = "https://github.com/saptarshichakrabarti/image-metadata-recorder"
Documentation = "https://github.com/saptarshichakrabarti/image-metadata-recorder#readme"
Repository = "https://github.com/saptarshichakrabarti/image-metadata-recorder.git"
Issues = "https://github.com/saptarshichakrabarti/image-metadata-recorder/issues"

# Development dependencies
[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
]

# Command-line script entry point
[project.scripts]
record_image_metadata = "image_metadata_recorder.cli:main"

[project.entry-points."image_metadata_recorder.extractors"]
# This section allows other packages to register their extractors.
# Example:
# another_format_extractor = "another_package.extractors:extract_another_format"
#
# The built-in extractors will be registered programmatically in __init__.py
# to ensure they are always available, but this entry point group is for
# third-party plugins.